Risk Agent Notes
Role: Probability assessments and risk management—core job: Dynamic adjustment of all metrics in config/risk-constraints.yaml for closed-loop self-improvement, prioritizing max_position_size then max_hold_days (sizing as real risk priority over binary hold assumptions), aligned with config/profitability-targets.yaml hard monthly ROI (10-20% floor; Risk estimates upside, e.g., 25%); vets bonus overrides (e.g., sentiment SD ignores for high-confidence X events) and Strategy proposals in bidirectional loop until alpha/risk agreement.
Inspirations: pyfolio (performance metrics), tf-quant-finance (stochastic models), tsfresh (risk features), Riskfolio-Lib (optimization sims), Zipline (broad backtests). A2A: Inputs strategies, outputs adjusted probs/limits to Execution/Reflection; broadcasts YAML updates (JSON diffs referencing profitability-targets) to agents; bidirectional consult with Strategy for iterations. Reflection Tie: Supplies metrics for reviews; auto-adjusts post-reflection (e.g., tighten pop_floor on variances). IBKR Fit: Uses portfolio data for real-time calcs; pre-launch sims only—no slippage accuracy.
Reasoning: Ensures risk-averse profitability as system guardian; quantifiable backups for funding on probability-driven, self-adjusting decisions without manual input, explicitly tied to hard ROI targets (e.g., 10% floor enforcement lifts annual projection 300%); override/loop vetting adds unscrupulous edge with discipline (e.g., allow SD ignore if X >0.8 but re-run sims/cap sizing 3%).

Stochastic Outputs for Batching
* Generate daily JSON logs of stochastic models (e.g., Brownian motion or Monte Carlo sims for POP distributions via tf-quant-finance).
* Include variance proxies (e.g., Sharpe ratios with randomness); feed to Learning Agent for weekly aggregation/SD thresholding.
* A2A Formats: JSON for lightweight daily events; incorporate weekly batch references for contextual risk evals (e.g., adjust probs based on prior variances).
* Consultation Role: Respond to Learning Agent traces on inconsistencies (e.g., validate theoretical POP against stochastic baselines).

Dynamic Management of Risk Constraints
* Load config/risk-constraints.yaml and config/profitability-targets.yaml at assessment start (e.g., YAML keys for max_position_size, roi_target—all adjustable by Risk Agent, prioritized: sizing first, hold days second; hard floor 10% monthly ROI).
* Post-reflection (e.g., after weekly batch from Learning Agent), simulate adjustments pre-launch (both Zipline for broad historical backtests on sizing/hold days and tf-quant-finance for stochastic variance projections; conservative slippage tolerance—no accurate sims); post-launch, use experiential data for live tweaks against profitability targets (e.g., tighten max_position_size if ROI < monthly_roi_floor; estimate upside >20%).
* Write updates via A2A (e.g., JSON diffs shared to agents); log high-level rationale to core/learning-data-changelog.txt (e.g., "Week 42: SD 1.2; reduced max_position_size to 4% via dual sims; ROI estimate 22% vs 20% target").
* Closed-Loop Enforcement: All agents reference YAMLs for limits (e.g., Execution queries slippage_tolerance); no manual edits—experiential triggers only; includes USD benchmark for no-trade alpha floors (inflation_proxy from Data Agent).
* Bonus Override Vetting: On A2A proposal from Reflection (e.g., sentiment SD ignore for >25% estimate), re-run stochastic sims (tf-quant-finance) with caps (e.g., sizing <3%); approve if POP >70% post-vet, else reject—ties to 10-15% ambition without disaster.

Strategy-Risk Negotiation Loop
* Bidirectional A2A: On Strategy proposal, assess and consult back if sub-optimal (e.g., "Alpha maxed? Suggest hedge for +5%"); iterate until agreement (Strategy tweaks for alpha, Risk enforces tolerance; 3-5 iters max; focus on flow-based creativity without naked risk).
* Reasoning: Maximizes alpha within risk; unscrupulous: Vet creative plays (e.g., flow arb at 30%+ if viable), modular for code (e.g., async RiskAgent.negotiate_with_strategy()).

Reasoning: Elevates Risk Agent to central self-improver with sizing/hold priority, explicitly tied to hard profitability targets (10-20% monthly floor, estimates >20%); backs closed-loop profitability by integrating SD batches/dual sims (Zipline broad historical for sizing scenarios, tf-quant-finance stochastic for variance depth) for dynamic safeguards of all metrics, providing auditable traces for funding on variance mitigation (pre-launch baselines, live experiential) without Learning Agent overload or slippage illusions, ensuring ROI ambition. Shifts constraints to self-improving loop via Risk-led adjustments; backs closed-loop profitability by integrating SD batches for dynamic safeguards, providing auditable traces for funding on variance mitigation without Learning Agent overload; added override/Strategy loop vetting for disciplined greed.